{"version":3,"sources":["./src/app/authentication/authentication-routing.module.ts","./src/app/authentication/authentication.component.ts","./src/app/authentication/authentication.component.html","./src/app/authentication/authentication.module.ts","./src/app/authentication/components/loading/loading.component.ts","./src/app/authentication/components/loading/loading.component.html","./src/app/authentication/components/login-admin/login-admin.component.ts","./src/app/authentication/components/login-admin/login-admin.component.html","./src/app/authentication/components/login/login.component.ts","./src/app/authentication/components/login/login.component.html","./src/app/authentication/components/mot-passe-oublier/mot-passe-oublier.component.ts","./src/app/authentication/components/mot-passe-oublier/mot-passe-oublier.component.html","./src/app/authentication/components/page-inaccessible/page-inaccessible.component.ts","./src/app/authentication/components/page-inaccessible/page-inaccessible.component.html","./src/app/authentication/components/renisialiser-mot-passe/renisialiser-mot-passe.component.ts","./src/app/authentication/components/renisialiser-mot-passe/renisialiser-mot-passe.component.html","./src/app/services/authentication/api-authentication.service.ts"],"names":[],"mappings":"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","file":"authentication-authentication-module-es2015.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { AuthenticationComponent } from './authentication.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    children: [\r\n      {\r\n        path: 'login-admin',\r\n        loadChildren: () => import('./components/login-admin/login-admin.module').then(module => module.LoginAdminModule)\r\n      },\r\n      {\r\n        path: 'login',\r\n        loadChildren: () => import('./components/login/login.module').then(module => module.LoginModule)\r\n      },\r\n      {\r\n        path: 'motPasseOublier',\r\n        loadChildren: () => import('./components/mot-passe-oublier/mot-passe-oublier.module').then(module => module.MotPasseOublierModule)\r\n      },\r\n      {\r\n        path: 'RenitialiserMotdePasseOublie/:id',\r\n        loadChildren: () => import('./components/renisialiser-mot-passe/renisialiser-mot-passe.module').then(module => module.RenisialiserMotPasseModule)\r\n      }\r\n      ,\r\n      {\r\n        path: 'page-inaccessible',\r\n        loadChildren: () => import('./components/page-inaccessible/page-inaccessible.module').then(module => module.PageInaccessibleModule)\r\n      }\r\n    ]\r\n  }\r\n  \r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AuthenticationRoutingModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-authentication',\r\n  templateUrl: './authentication.component.html',\r\n  styleUrls: ['./authentication.component.scss']\r\n})\r\nexport class AuthenticationComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  \r\n\r\n}\r\n","<p>authentication works!</p>\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { AuthenticationRoutingModule } from './authentication-routing.module';\r\nimport { AuthenticationComponent } from './authentication.component';\r\nimport { LoginComponent } from './components/login/login.component';\r\nimport { MotPasseOublierComponent } from './components/mot-passe-oublier/mot-passe-oublier.component';\r\nimport { RenisialiserMotPasseComponent } from './components/renisialiser-mot-passe/renisialiser-mot-passe.component';\r\nimport { LoadingComponent } from './components/loading/loading.component';\r\n\r\nimport { FormsModule, ReactiveFormsModule } from \"@angular/forms\";\r\nimport { PageInaccessibleComponent } from './components/page-inaccessible/page-inaccessible.component';\r\nimport { SharedGlobalModule } from '../shared-global/shared-global.module';\r\nimport { LoginAdminComponent } from './components/login-admin/login-admin.component';\r\n\r\n@NgModule({\r\n  declarations: [AuthenticationComponent, LoginComponent, MotPasseOublierComponent, RenisialiserMotPasseComponent, LoadingComponent, PageInaccessibleComponent, LoginAdminComponent],\r\n  imports: [\r\n    CommonModule,\r\n    AuthenticationRoutingModule,\r\n    FormsModule, ReactiveFormsModule,\r\n    SharedGlobalModule,\r\n  ]\r\n})\r\nexport class AuthenticationModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-loading',\r\n  templateUrl: './loading.component.html',\r\n  styleUrls: ['./loading.component.scss']\r\n})\r\nexport class LoadingComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<div class=\"spinner-border text-primary\" role=\"status\">\r\n    <span class=\"sr-only\">Loading...</span>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Router, Event } from '@angular/router';\r\nimport { InformationsService } from 'src/app/services/informations.service';\r\n\r\nimport { ToastNotificationService } from 'src/app/services/toast-notification.service';\r\nimport { ApiAuthenticationService } from 'src/app/services/authentication/api-authentication.service';\r\nimport { TokenStorageService } from 'src/app/services/authentication/token-storage.service';\r\n\r\nconst USER_ADMIN_KEY = 'USER_ADMIN_KEY';\r\n\r\n@Component({\r\n  selector: 'app-login-admin',\r\n  templateUrl: './login-admin.component.html',\r\n  styleUrls: ['./login-admin.component.scss']\r\n})\r\nexport class LoginAdminComponent implements OnInit {\r\n\r\n  formC:FormGroup\r\n  isLoading = false;\r\n \r\n  erreurLogin = {\r\n    email:\"\",\r\n    password:\"\"\r\n  }\r\n \r\n  isErreurs = false;\r\n\r\n  message \r\n \r\n  constructor(private tokenStorageService:TokenStorageService, private fb:FormBuilder, private notificationToast: ToastNotificationService , private informationsService:InformationsService, private http: HttpClient, private router:Router, private apiAuthenticationService:ApiAuthenticationService ) { \r\n    this.formC = this.fb.group({\r\n        email: ['', [Validators.required, Validators.min(2)]],\r\n        password:['',[Validators.required, Validators.min(2)]],\r\n    })\r\n  }\r\n\r\n  ngOnInit(): void { \r\n    this.tokenStorageService.signOut()\r\n  }\r\n\r\n  chargerErreurs(){\r\n\r\n    for(let key in this.erreurLogin){\r\n        this.erreurLogin[key] = \"\"\r\n        if(document.getElementById(key) != null){\r\n          document.getElementById(key).classList.remove(\"border-erreur\")\r\n        }\r\n    }\r\n\r\n    this.isErreurs = false\r\n  \r\n    if(this.formC.controls.email.status != \"VALID\"){\r\n      this.erreurLogin.email = \"Veuillez inserer votre email !\"\r\n      if(document.getElementById('email') != null){\r\n        document.getElementById('email').classList.add(\"border-erreur\")\r\n      }\r\n      this.isErreurs = true\r\n    }\r\n    \r\n    if(this.formC.value.password.length < 2){\r\n      this.erreurLogin.password = \"Veuillez inserer votre mot de passe !\"\r\n      if(document.getElementById('password') != null){\r\n        document.getElementById('password').classList.add(\"border-erreur\")\r\n      }\r\n      this.isErreurs = true\r\n    }\r\n\r\n    return this.isErreurs\r\n  }\r\n\r\n\r\n  login(){\r\n   \r\n    if(this.chargerErreurs()) {\r\n      this.notificationToast.showErrorSmall(\"Veuillez remplir les champs obligatoires !\")\r\n      return\r\n    }\r\n  \r\n    if(this.isLoading){\r\n      return \r\n    }\r\n\r\n    this.isLoading = true;\r\n    let request = {email:this.formC.value.email, password:this.formC.value.password}\r\n    \r\n    this.apiAuthenticationService.loginAdmin(request).subscribe(\r\n      res => {\r\n        this.isLoading = false\r\n        let response: any = res\r\n        if(response.status){\r\n          this.saveToken(response.token)\r\n          this.router.navigate(['/dashboard-admin/societe'])\r\n          this.notificationToast.showSuccessSmall(\"Veuillez verifier vos informations !!\")\r\n        }else{\r\n          this.isLoading = false\r\n          this.notificationToast.showErrorSmall(\"Veuillez verifier vos informations !!\")\r\n        }\r\n      }, err => {\r\n        this.isLoading = false\r\n        alert(\"Désole, ilya un problème de connexion internet\")\r\n      }\r\n    );\r\n  }\r\n\r\n  public saveToken(token: any): void {\r\n    this.tokenStorageService.saveToken(token, {})\r\n    this.tokenStorageService.saveRoleSuperAdmin()\r\n  }\r\n\r\n}\r\n","<section id=\"slider\" style=\"margin-top:8%; background-color:#1abc9c; height:100%;\">\r\n\r\n    <div class=\"slider-3\" style=\"width: fit-content; margin:0 auto;\">\r\n        <form [formGroup]=\"formC\">\r\n            <h1>Connexion</h1>\r\n            <!--<p>Si vous n'avez pas de compte d'utilisateur, vous pouvez en créer un - <a style=\"color: white;\" [routerLink]=\"['/Inscription']\">c'est gratuit.</a> </p>\r\n                                -->\r\n\r\n            <label><b>Nom d'utilisateur</b></label>\r\n            <input type=\"text\" class=\"form-control\" formControlName=\"email\" id=\"email\" placeholder=\"\">\r\n            <p class=\"erreur\">{{erreurLogin.email}}\r\n            </p>\r\n\r\n            <label><b>Mot de passe</b></label>\r\n            <input type=\"password\" class=\"form-control\" formControlName=\"password\" id=\"password\">\r\n            <p class=\"erreur\">{{erreurLogin.password}}\r\n            </p>\r\n\r\n            <app-loading *ngIf=\"isLoading\"></app-loading>\r\n\r\n            <div>\r\n                <a style=\"color:black;\" [routerLink]=\"['/authentication/motPasseOublier']\">Mot de passe oublié </a>\r\n                <input type=\"submit\" id='submit' value='LOGIN' (click)=\"login()\">\r\n            </div>\r\n            \r\n        </form>\r\n    </div>\r\n\r\n\r\n\r\n</section>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Router, Event } from '@angular/router';\r\nimport { InformationsService } from 'src/app/services/informations.service';\r\n\r\nimport { ToastNotificationService } from 'src/app/services/toast-notification.service';\r\nimport { ApiAuthenticationService } from 'src/app/services/authentication/api-authentication.service';\r\nimport { TokenStorageService } from 'src/app/services/authentication/token-storage.service';\r\nimport { FonctionPartagesService } from 'src/app/services/fonction-partages.service';\r\nimport { SessionCaisseService } from 'src/app/services/serviceBD_Commerce/sessionCaisse.service';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.scss']\r\n})\r\nexport class LoginComponent implements OnInit {\r\n\r\n  formC:FormGroup\r\n  isLoading = false;\r\n \r\n  erreurLogin = {\r\n    email:\"\",\r\n    password:\"\"\r\n  }\r\n \r\n  isErreurs = false;\r\n\r\n  message \r\n  \r\n\r\n  constructor(\r\n    private tokenStorageService:TokenStorageService, \r\n    private sessionCaisseSer: SessionCaisseService,\r\n    private fb:FormBuilder, private notificationToast: ToastNotificationService , \r\n    private informationsService:InformationsService, \r\n    private http: HttpClient, private router:Router, \r\n    private apiAuthenticationService:ApiAuthenticationService,\r\n    public fonctionPartagesService: FonctionPartagesService, ) { \r\n    this.formC = this.fb.group({\r\n      email: ['', [Validators.required, Validators.min(2)]],\r\n      password:['',[Validators.required, Validators.min(2)]],\r\n    })\r\n  }\r\n\r\n  ngOnInit(): void { \r\n   // this.tokenStorageService.signOut()\r\n  }\r\n\r\n  chargerErreurs(){\r\n\r\n    for(let key in this.erreurLogin){\r\n        this.erreurLogin[key] = \"\"\r\n        if(document.getElementById(key) != null){\r\n          document.getElementById(key).classList.remove(\"border-erreur\")\r\n        }\r\n    }\r\n\r\n    this.isErreurs = false\r\n  \r\n    if(this.formC.controls.email.status != \"VALID\"){\r\n      this.erreurLogin.email = \"Veuillez inserer votre email !\"\r\n      if(document.getElementById('email') != null){\r\n        document.getElementById('email').classList.add(\"border-erreur\")\r\n      }\r\n      this.isErreurs = true\r\n    }\r\n    \r\n    if(this.formC.value.password.length < 2){\r\n      this.erreurLogin.password = \"Veuillez inserer votre mot de passe !\"\r\n      if(document.getElementById('password') != null){\r\n        document.getElementById('password').classList.add(\"border-erreur\")\r\n      }\r\n      this.isErreurs = true\r\n    }\r\n\r\n    return this.isErreurs\r\n  }\r\n\r\n\r\n  login(){\r\n   \r\n    if(this.chargerErreurs()) {\r\n      this.notificationToast.showErrorSmall(\"Veuillez remplir les champs obligatoires !\")\r\n      return\r\n    }\r\n  \r\n    if(this.isLoading){\r\n      return \r\n    }\r\n\r\n    this.isLoading = true;\r\n    let request = {email:this.formC.value.email, password:this.formC.value.password}\r\n    \r\n    this.apiAuthenticationService.login(request).subscribe(\r\n      res => {\r\n        this.isLoading = false\r\n        let response: any = res\r\n        if(response.status){\r\n          this.tokenStorageService.saveToken(response.token, response.user)\r\n          this.tokenStorageService.saveUser(response.user)\r\n          this.openModalSocietes()\r\n        }else{\r\n          this.isLoading = false\r\n          this.notificationToast.showErrorSmall(\"Veuillez verifier vos informations !!\")\r\n        }\r\n      }, err => {\r\n        this.isLoading = false\r\n        alert(\"Désole, ilya un problème de connexion internet\")\r\n      }\r\n    );\r\n  }\r\n\r\n  isOpenModalSocietes = false\r\n  openModalSocietes(){\r\n    this.isOpenModalSocietes = true\r\n  }\r\n\r\n  closeModalSocietes(){\r\n    this.isOpenModalSocietes = false\r\n    this.openModalExercices()\r\n  }\r\n\r\n  isOpenModalExercices = false\r\n  openModalExercices(){\r\n    this.isOpenModalExercices = true\r\n  }\r\n\r\n  closeModalExercices(){\r\n    //this.getSessionCaisseUtilisateur() \r\n    this.router.navigate(['/dashboard/default'])\r\n      \r\n    this.isOpenModalExercices = false\r\n  }\r\n\r\n  getSessionCaisseUtilisateur() {\r\n    this.isLoading = true\r\n    let utilisateur = this.tokenStorageService.getUser()\r\n    this.sessionCaisseSer.utilisateur(utilisateur.id)\r\n      .subscribe(\r\n        res => {\r\n          this.isLoading = false\r\n          let resultat: any = res\r\n          if( resultat.status == false)\r\n             {\r\n               this.router.navigate(['sessionCaisses/ajout']) \r\n             }else{\r\n              let sessionCaisse = resultat.resultat\r\n              this.informationsService.setSessionCaisseCurrent(sessionCaisse)\r\n              this.router.navigate(['/dashboard/default'])\r\n             }\r\n        },\r\n        error => {\r\n          this.isLoading = false\r\n          alert(\"Désole, ilya un problème de connexion internet\")\r\n        });\r\n  }\r\n\r\n\r\n\r\n}\r\n\r\n","<section id=\"slider\" style=\"margin-top:8%; background-color:#1abc9c; height:100%;\">\r\n\r\n    <div class=\"slider-3\" style=\"width: fit-content; margin:0 auto;\">\r\n        <form [formGroup]=\"formC\">\r\n            <h1>Connexion</h1>\r\n            <!--<p>Si vous n'avez pas de compte d'utilisateur, vous pouvez en créer un - <a style=\"color: white;\" [routerLink]=\"['/Inscription']\">c'est gratuit.</a> </p>\r\n                                -->\r\n\r\n            <label><b>Nom d'utilisateur</b></label>\r\n            <input type=\"text\" class=\"form-control\" formControlName=\"email\" id=\"email\" placeholder=\"\">\r\n            <p class=\"erreur\">{{erreurLogin.email}}\r\n            </p>\r\n\r\n            <label><b>Mot de passe</b></label>\r\n            <input type=\"password\" class=\"form-control\" formControlName=\"password\" id=\"password\">\r\n            <p class=\"erreur\">{{erreurLogin.password}}\r\n            </p>\r\n\r\n            <app-loading *ngIf=\"isLoading\"></app-loading>\r\n\r\n            <div>\r\n                <a style=\"color:black;\" [routerLink]=\"['/authentication/motPasseOublier']\">Mot de passe oublié </a>\r\n                <input type=\"submit\" id='submit' value='LOGIN' (click)=\"login()\">\r\n            </div>\r\n            \r\n        </form>\r\n    </div>\r\n\r\n\r\n\r\n</section>\r\n\r\n<app-parametres-societes-modal  (closeModalAdd)=\"closeModalSocietes()\" [isOpenModalAdd]=\"isOpenModalSocietes\" ></app-parametres-societes-modal>\r\n\r\n<app-parametres-exercices-modal  (closeModalAdd)=\"closeModalExercices()\" [isOpenModalAdd]=\"isOpenModalExercices\" ></app-parametres-exercices-modal>\r\n","import { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Router, Event } from '@angular/router';\r\nimport { InformationsService } from 'src/app/services/informations.service';\r\n\r\nimport { ToastNotificationService } from 'src/app/services/toast-notification.service';\r\nimport { ApiAuthenticationService } from 'src/app/services/authentication/api-authentication.service';\r\nimport { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-mot-passe-oublier',\r\n  templateUrl: './mot-passe-oublier.component.html',\r\n  styleUrls: ['./mot-passe-oublier.component.scss']\r\n})\r\nexport class MotPasseOublierComponent implements OnInit { \r\n\r\n  formC:FormGroup\r\n  isLoading = false;\r\n  \r\n  erreurLogin = {\r\n    email:\"\"\r\n  }\r\n\r\n  isErreurs = false;\r\n\r\n  message \r\n  \r\n  constructor(private toastNotificationService:ToastNotificationService, private apiAuthenticationService:ApiAuthenticationService, private fb:FormBuilder, private informationsService:InformationsService, private http: HttpClient, private router:Router) { \r\n      this.formC = this.fb.group({\r\n        email: ['', [Validators.required, Validators.email,Validators.pattern('^[a-z0-9._%+-]+@[a-z0-9.-]+\\\\.[a-z]{2,4}$')]],\r\n      })\r\n  }\r\n\r\n  ngOnInit(): void {\r\n   \r\n   }\r\n\r\n   chargerErreurs(){\r\n\r\n    for(let key in this.erreurLogin){\r\n        this.erreurLogin[key] = \"\"\r\n        if(document.getElementById(key) != null){\r\n          document.getElementById(key).classList.remove(\"border-erreur\")\r\n        }\r\n    }\r\n\r\n    this.isErreurs = false\r\n  \r\n    if(this.formC.controls.email.status != \"VALID\"){\r\n      this.erreurLogin.email = \"Veuillez inserer votre email !\"\r\n      if(document.getElementById('email') != null){\r\n        document.getElementById('email').classList.add(\"border-erreur\")\r\n      }\r\n      this.isErreurs = true\r\n    }\r\n    \r\n    return this.isErreurs\r\n  }\r\n\r\n  envoyer(){\r\n   \r\n    if (this.chargerErreurs()) {\r\n      return\r\n    }\r\n  \r\n    if(this.isLoading){\r\n      return \r\n    }\r\n\r\n    this.isLoading = true;\r\n\r\n    let request = {email:this.formC.value.email, baseUrl:this.informationsService.baseURLAngular+ \"/authentication/RenitialiserMotdePasseOublie\"}\r\n    \r\n    this.apiAuthenticationService.modifierMotPasse(request).subscribe(\r\n      res => {\r\n        this.isLoading = false\r\n        let response: any = res\r\n        if(response.status){\r\n          this.toastNotificationService.showSuccessSmall(\"Votre email est envoyé avec succès !!\")\r\n          this.router.navigate(['/authentication/login'])  \r\n        }else{\r\n          this.toastNotificationService.showErrorSmall(\"Veuillez vérifier votre email !!\")\r\n        }\r\n      }, err => {\r\n        this.isLoading = false\r\n        alert(\"Désole, ilya un problème de connexion internet\")\r\n    \r\n      }\r\n    );\r\n  }\r\n\r\n}\r\n\r\n","<section id=\"slider\" style=\"margin-top:8%; background-color:#1abc9c; height:100%;\">\r\n    \r\n    <div class=\"slider-3\" style=\"width: fit-content; margin:0 auto;\">\r\n        <form [formGroup]=\"formC\">\r\n                                <h1>Email de récupération</h1> \r\n                                <!--<p>Si vous n'avez pas de compte d'utilisateur, vous pouvez en créer un - <a style=\"color: white;\" [routerLink]=\"['/Inscription']\">c'est gratuit.</a> </p>\r\n                                -->\r\n                                \r\n                                <label for=\"exampleFormControlInput1\" class=\"form-label\">Email</label>\r\n                                <input type=\"email\" class=\"form-control\" formControlName=\"email\"  id=\"email\" placeholder=\"\">\r\n                              \r\n                                <p class=\"erreur\">{{erreurLogin.email}}\r\n                                </p>\r\n                                  \r\n                                <app-loading *ngIf=\"isLoading\"></app-loading>\r\n                               \r\n                                <div style=\"width: 100%;\">\r\n                                    <input type=\"submit\" id='submit' (click)=\"envoyer()\"  value=\"Envoyer\">  \r\n                                </div>\r\n                            </form>\r\n                        </div>\r\n                      \r\n                \r\n</section>\r\n\r\n\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { BrowserDynamicTestingModule } from '@angular/platform-browser-dynamic/testing';\r\n\r\n@Component({\r\n  selector: 'app-page-inaccessible',\r\n  templateUrl: './page-inaccessible.component.html',\r\n  styleUrls: ['./page-inaccessible.component.scss']\r\n})\r\nexport class PageInaccessibleComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n    document.getElementsByTagName('html')[0].setAttribute(\"style\",\"background-color:white;\")\r\n    document.getElementsByTagName('body')[0].setAttribute(\"style\",\"\")\r\n \r\n    var clientHeight = document.getElementById('slider-1').clientHeight;\r\n    var windowsHeight = window.innerHeight;;\r\n    var marginTop = (windowsHeight - clientHeight) / 2\r\n    if(marginTop > 0){\r\n      document.getElementById('slider-1').setAttribute(\"style\", \"margin-top:\"+marginTop+\"px;\")\r\n      \r\n    }\r\n  }\r\n\r\n}\r\n","<section id=\"slider-1\">\r\n       <br>\r\n       <h2 style=\"color:#659685;; font-size:100px;\">404</h2>\r\n       <p style=\"color:gray; font-size:40px; font-weight: 900;\">Page non trouvée</p>\r\n       <p style=\"color:gray; font-size:20px;\">La page que vous tentez d'afficher n'existe pas ou un autre erreur s'est produite.\r\n        <br>Vous pouvez revenir à <a onclick=\"window.history.back();\">la page précédente</a> ou aller a <a href=\"#\">la page d'accueil</a>.</p>\r\n        <br>\r\n\r\n</section>\r\n\r\n\r\n\r\n\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Router, Event } from '@angular/router';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { InformationsService } from 'src/app/services/informations.service';\r\n\r\nimport { ToastNotificationService } from 'src/app/services/toast-notification.service';\r\nimport { ApiAuthenticationService } from 'src/app/services/authentication/api-authentication.service';\r\n\r\n@Component({\r\n  selector: 'app-renisialiser-mot-passe',\r\n  templateUrl: './renisialiser-mot-passe.component.html',\r\n  styleUrls: ['./renisialiser-mot-passe.component.scss']\r\n})\r\nexport class RenisialiserMotPasseComponent implements OnInit {\r\n  formC:FormGroup\r\n  isLoading = false;\r\n  \r\n  erreurLogin = {\r\n    newPassword:\"\",\r\n    newPasswordValidate:\"\"\r\n  }\r\n\r\n  isErreurs = false;\r\n\r\n  code=\"\"\r\n\r\n  constructor(private toastNotificationService:ToastNotificationService, private _Activatedroute:ActivatedRoute, private apiAuthenticationService :ApiAuthenticationService , private fb:FormBuilder, private http: HttpClient, private router:Router) { \r\n    console.log(\"renisialiser mot de passe\")\r\n    this.formC = this.fb.group({\r\n      newPassword:['',[Validators.required, Validators.min(6)]],\r\n      newPasswordValidate:['',[Validators.required, Validators.min(6)]],\r\n    })\r\n  }\r\n\r\n  ngOnInit(): void { \r\n    this.code = this._Activatedroute.snapshot.paramMap.get('id');\r\n   }\r\n\r\n  chargerErreurs(){\r\n    for(let key in this.erreurLogin){\r\n      this.erreurLogin[key] = \"\"\r\n      if(document.getElementById(key) != null){\r\n        document.getElementById(key).classList.remove(\"border-erreur\")\r\n      }\r\n    }\r\n\r\n    this.isErreurs = false\r\n  \r\n   \r\n    if(this.formC.value.newPassword.length < 6){\r\n      this.erreurLogin.newPassword = \"Veuillez inserer votre nouveau mot de passe !\"\r\n      if(document.getElementById('newPassword') != null){\r\n        document.getElementById('newPassword').classList.add(\"border-erreur\")\r\n      }\r\n      this.isErreurs = true\r\n    }\r\n\r\n    if(this.formC.value.newPassword != \"\" && this.formC.value.newPassword != this.formC.value.newPasswordValidate){\r\n      this.erreurLogin.newPasswordValidate = \"Veuillez repeter votre nouveau mot de passe !\"\r\n      if(document.getElementById('newPasswordValidate') != null){\r\n        document.getElementById('newPasswordValidate').classList.add(\"border-erreur\")\r\n      }\r\n      this.isErreurs = true\r\n    }\r\n\r\n   return this.isErreurs\r\n  }\r\n\r\n  envoyer(){\r\n   \r\n    if (this.chargerErreurs()) {\r\n      this.toastNotificationService.showErrorSmall(\"Veuillez vérifier votre mot de passe !!\")\r\n      return\r\n    }\r\n  \r\n    if(this.isLoading){\r\n      return \r\n    }\r\n\r\n    this.isLoading = true;\r\n\r\n    let request = {code:this.code, newPassword:this.formC.value.newPassword}\r\n    \r\n    this.apiAuthenticationService.renisialiserMotPasse(request).subscribe(\r\n      res => {\r\n        this.isLoading = false\r\n        let response: any = res\r\n        if(response.status){\r\n          this.toastNotificationService.showSuccessSmall(\"Votre mot de passe est enregistrée!!\")\r\n          this.router.navigate(['/'])\r\n        }else{\r\n          this.toastNotificationService.showSuccessSmall(\"Votre mot de passe est fausse!!\")\r\n        }\r\n      }, err => {\r\n        this.isLoading = false\r\n        alert(\"Désole, ilya un problème de connexion internet\")\r\n   \r\n      }\r\n    );\r\n  }\r\n\r\n}\r\n\r\n","<section id=\"slider\" style=\"margin-top:8%; background-color:#1abc9c; height:100%;\">\r\n\r\n  <div class=\"slider-3\" style=\"width: fit-content; margin:0 auto;\">\r\n\r\n    <form [formGroup]=\"formC\">\r\n      <h1>Réinitialiser votre mot de passe</h1>\r\n\r\n      <label for=\"exampleFormControlInput588\" class=\"form-label\">Nouveau mot de passe</label>\r\n      <input type=\"password\" class=\"form-control\" formControlName=\"newPassword\" id=\"newPassword\" placeholder=\"\">\r\n      <p class=\"erreur\">{{erreurLogin.newPassword}}</p>\r\n\r\n      <label for=\"exampleFormControlTextarea589\" class=\"form-label\">Confirmer mot de passe</label>\r\n      <input type=\"password\" class=\"form-control\" formControlName=\"newPasswordValidate\" id=\"newPasswordValidate\">\r\n      <p class=\"erreur\">{{erreurLogin.newPasswordValidate}}</p>\r\n\r\n      <app-loading *ngIf=\"isLoading\"></app-loading>\r\n\r\n      <div style=\"width: 100%;\">\r\n        <input type=\"submit\" id='submit' (click)=\"envoyer()\" value=\"Enregistrer\">\r\n      </div>\r\n    </form>\r\n\r\n  </div>\r\n\r\n</section>","import { Injectable } from '@angular/core';\r\nimport {HttpClient, HttpHeaders} from '@angular/common/http';\r\nimport {BehaviorSubject, Observable} from 'rxjs';\r\nimport {TokenStorageService} from '../../services/authentication/token-storage.service';\r\nimport { InformationsService } from '../informations.service';\r\n\r\n\r\n\r\nconst httpOptions = {\r\n  headers: new HttpHeaders({'Content-Type': 'application/json'})\r\n};\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ApiAuthenticationService {\r\n\r\n  AUTH_API = \"\"\r\n\r\n  constructor(public informationGenerale: InformationsService, private http: HttpClient, private tokenStorageService: TokenStorageService) {\r\n    this.AUTH_API = informationGenerale.baseUrl\r\n  }\r\n\r\n  login(request): Observable<any> {\r\n    return this.http.post(this.AUTH_API + '/utilisateurs/login', request, httpOptions);\r\n  }\r\n\r\n  loginAdmin(request): Observable<any> {\r\n    return this.http.post(this.AUTH_API + '/utilisateurs/loginAdmin', request, httpOptions);\r\n  }\r\n\r\n  modifierMotPasse(request): Observable<any> {\r\n    return this.http.post(this.AUTH_API + '/emails/emailMotPasseEmail', request, httpOptions);\r\n  }\r\n\r\n  renisialiserMotPasse(request): Observable<any> {\r\n    return this.http.post(this.AUTH_API + '/utilisateurs/newPassword', request, httpOptions);\r\n  }\r\n\r\n}\r\n\r\n"],"sourceRoot":"webpack:///"}